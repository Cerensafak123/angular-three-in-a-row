@import '~reset-css/_reset.scss';
@import 'fonts';
@import 'modal';

$remove-animation-duration: .55s !default;
$swap-animation-duration: .25s !default; 
$score-animation-duration: .95s !default;

$game-behavior-width: 350px !default;

$grid-columns-count: 9 !default;
$grid-rows-count: 9 !default;

$tile-padding: 10px !default;
$tile-size: 44px !default;

$grid-width: $grid-columns-count * ($tile-size + $tile-padding) + $tile-padding  !default;
$grid-height: $grid-rows-count * ($tile-size + $tile-padding) + $tile-padding !default;

$button-height: 38px !default;
$button-font-size: 20px !default;

$score-font-size: 24px !default;

// Typography

@mixin text() {
  font-family: 'Roboto Condensed', Arial, sans-serif;
  font-size: 18px;
  font-weight: 300;

  line-height: 1.3;
}

@mixin score-text() {
  @include text();

  font-size: $score-font-size;
  font-weight: 700;

  line-height: 1;
}

@mixin button-text() {
  @include text();

  font-size: $button-font-size;
  font-weight: 700;

  line-height: 1;
}

@mixin header-text() {
  @include text();

  font-size: 36px;
  font-weight: 700;

  color: #2c3e50;
  line-height: 1.1;
}

@mixin subheader-text() {
  @include text();

  font-size: 24px;
  font-weight: 700;

  color: #2c3e50;
  line-height: 1.1;
}


b, strong {
  @include text();

  font-weight: 700;
}

.header {
  @include header-text();

  display: block;
  margin-bottom: 25px;
}

.subheader {
  @include subheader-text();

  display: block;
}

p {
  @include text();

  &.indent { margin-top: 25px; }

  + p { margin-top: 10px; }
  
  + .button { margin-top: 25px }
}

// Animations

@keyframes bounceOut {
  20% {
    transform: scale3d(.9, .9, .9);
  }

  50%, 55% {
    opacity: 1;
    transform: scale3d(1.1, 1.1, 1.1);
  }

  to {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }
}

*, *:before, *:after {
  box-sizing: border-box;
}

body {
  @include text();
}

// General

.center {
  margin-left: auto;
  margin-right: auto;
  text-align: center;
}

.button {
  @include button-text();

  display: inline-block;
  cursor: pointer;

  padding: (($button-height - $button-font-size) / 2) 24px;
  
  white-space: nowrap;
  color: #fff;

  transition: all 0.3s linear;
  background-color: #2ecc71;

  border-radius: 2px;
  height: $button-height;
  
  background-image: linear-gradient(transparent,rgba(0, 0, 0, .06));
  text-align: center;

  &:active { box-shadow: 0 0 0 1px rgba(0,0,0,.15) inset, 0 0 6px rgba(0,0,0,.2) inset; }
}

// Layout 


.game-wrapper {
  width: $grid-width + $game-behavior-width;
  margin-left: auto;
  margin-right: auto;
}

.game-start {
  padding-bottom: 30px;
}

.game-behavior {
  width: $game-behavior-width;
  float: left;
  padding: 45px 25px 45px 0; 
}

.game-playground {
  margin-left: $game-behavior-width;
}

// Game elements

.score {
  @include score-text;
  
  display: inline-block; 
  position: absolute;

  color:#34495e;

  @for $x from 1 through $grid-columns-count {
    @for $y from 1 through $grid-rows-count {
      $zeroOffsetX: $x - 1;
      $zeroOffsetY: $y - 1;

      $newX: ($tile-size + $tile-padding) * $zeroOffsetX;
      $newY: ($tile-size + $tile-padding) * $zeroOffsetY + ($tile-size + $tile-padding - $score-font-size) / 2;

      @keyframes scoreAnimation-#{$x}-#{$y} {
        0% { transform: translate($newX, $newY); }
        
        50%, 65% { opacity: 1; }

        to {
          opacity: 0;
          transform: translate($newX, $newY - 25px);
        }
      }

      &.position-#{$zeroOffsetX}-#{$zeroOffsetY} {
        transform: translate($newX, $newY);
        opacity: 1;
        
        animation-name: scoreAnimation-#{$x}-#{$y};
        animation-duration: $score-animation-duration;
      }
    }
  }
}

// Components

grid {
  display: block;
  position: relative;

  width: $grid-width;
  height: $grid-height;

  margin: 20px auto 0 auto;
}

tile {
  display: block;
  position: absolute;

  height: $tile-size + ($tile-padding * 2);
  width: $tile-size + ($tile-padding * 2);
  cursor: pointer;

  padding: $tile-padding;
  transition: transform $swap-animation-duration ease-out, opacity $swap-animation-duration * 1.75 ease-in;

  svg {
    display: block;
    
    margin-left: auto;
    margin-right: auto;

    max-height: $tile-size;
    max-width: $tile-size;
  }

  &.remove {
    svg {
      animation-name: bounceOut;
      animation-duration: $remove-animation-duration;
    }
  }

  @for $x from 1 through $grid-columns-count {
    @for $y from 1 through $grid-rows-count {
      $zeroOffsetX: $x - 1;
      $zeroOffsetY: $y - 1;

      $newX: ($tile-size + $tile-padding) * $zeroOffsetX;
      $newY: ($tile-size + $tile-padding) * $zeroOffsetY;

      &.position-#{$zeroOffsetX}-#{$zeroOffsetY} {
        transform: translate($newX, $newY);
        opacity: 1;
        
        &.newbie { 
          transform: translate($newX, -($grid-height - $newY)); 
          opacity: 0;
        }
      }
    }
  }
}

